name: Example CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      -
        name: Actions Checkout
        uses: actions/checkout@v3
      -
        name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      -
        name: Install Dependencies
        run: |
          npm ci
      -
        name: Build Application
        run: |
          npm run build --if-present

  docker-build:
    runs-on: ubuntu-latest
    needs: build

    steps:
      -
        id: commit
        uses: pr-mpt/actions-commit-hash@v2
      -
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Docker Build and Push Container
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/react-app:${{ steps.commit.outputs.short }}
          outputs: type=docker,dest=/tmp/react-app.tar
          # push: true
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: react-app
          path: /tmp/react-app.tar
          if-no-files-found: error
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: react-app
          path: /tmp
      -
        name: Load image
        run: |
            docker load --input /tmp/react-app.tar
            docker image ls -a
